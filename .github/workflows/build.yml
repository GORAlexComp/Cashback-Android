name: Android Build

on:
  push:
    branches:
      - main
    paths:
      - 'app/version.properties'
  workflow_dispatch:
    branches:
      - main
    paths:
      - 'app/version.properties'  

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      COMMIT_URL: "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHANNEL_ID: ${{ secrets.TELEGRAM_CHANNEL_ID }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Get Previous Version Name
      id: previous_version
      run: |
        git fetch origin main --depth=2
        PREV_VERSION=$(git show origin/main~1:app/version.properties | grep 'VERSION_NAME' | cut -d'=' -f2 | tr -d ' ')
        echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV

    - name: Get Current Version Name
      id: current_version
      run: |
        VERSION_NAME=$(grep 'VERSION_NAME' app/version.properties | cut -d'=' -f2 | tr -d ' ')
        echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

    - name: Check if VERSION_NAME has changed
      if: ${{ env.PREV_VERSION != env.VERSION_NAME }}
      run: echo "VERSION_NAME has changed. Proceeding with build..."

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Upload google-services.json
      run: |
        echo "$FIREBASE_CONFIG" > $GITHUB_WORKSPACE/app/google-services.json
      env:
        FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}

    - name: Grant execution permissions for gradlew
      run: chmod +x ./gradlew

    - name: Build APK
      run: ./gradlew assembleRelease

    - name: Upload APK to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: app/build/outputs/apk/release/app-release.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ env.VERSION_NAME }}
        release_name: Release v${{ env.VERSION_NAME }}
        body: |
          Release for version v${{ env.VERSION_NAME }}

          [Commit](${{ env.commiturl }})
        draft: true
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Install HTTPie
      run: sudo apt-get install httpie

    - name: Send APK to Telegram
      if: ${{ success() }}
      env:
        APK_PATH: app/build/outputs/apk/release/app-release.apk
        RELEASE_URL: "https://github.com/GORAlexComp/Cashback-Android/commits/v${{ env.VERSION_NAME }}"
      run: |
        CAPTION="‚úÖ *–ù–æ–≤–∞ –≤–µ—Ä—Å—ñ—è –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É* v${{ env.VERSION_NAME }} —É—Å–ø—ñ—à–Ω–æ –∑—ñ–±—Ä–∞–Ω–∞!\n\nüè∑ *–ö–æ–º–º—ñ—Ç*: [${{ env.COMMIT_URL }}](${{ env.COMMIT_URL }})\nüìù *–©–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è*: [${{ env.RELEASE_URL }}](${{ env.RELEASE_URL }})\n\n#Android #apk"

        http --ignore-stdin --form POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
          chat_id="${{ secrets.TELEGRAM_CHANNEL_ID }}" \
          document@$APK_PATH \
          caption="${ CAPTION }" \
          link_preview_options={"is_disabled":true} \
          parse_mode="Markdown"
          
    - name: Notify Telegram on Failure
      if: ${{ failure() }}
      run: |
        http --ignore-stdin -F POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          chat_id=${{ secrets.TELEGRAM_CHANNEL_ID }} \
          text="‚ùå *–¢—Ä–∞–ø–∏–ª–∞—Å—å –ø–æ–º–∏–ª–∫–∞* –ø—ñ–¥ —á–∞—Å –∑–±—ñ—Ä–∫–∏ –Ω–æ–≤–æ—ó –≤–µ—Ä—Å—ñ—ó –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É v${{ env.VERSION_NAME }}!" \
          parse_mode="Markdown"
